// Code generated by MockGen. DO NOT EDIT.
// Source: ./swapi/swapi.go

// Package swapi is a generated GoMock package.
package swapi

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSWAPI is a mock of SWAPI interface.
type MockSWAPI struct {
	ctrl     *gomock.Controller
	recorder *MockSWAPIMockRecorder
}

// MockSWAPIMockRecorder is the mock recorder for MockSWAPI.
type MockSWAPIMockRecorder struct {
	mock *MockSWAPI
}

// NewMockSWAPI creates a new mock instance.
func NewMockSWAPI(ctrl *gomock.Controller) *MockSWAPI {
	mock := &MockSWAPI{ctrl: ctrl}
	mock.recorder = &MockSWAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSWAPI) EXPECT() *MockSWAPIMockRecorder {
	return m.recorder
}

// Film mocks base method.
func (m *MockSWAPI) Film(id int) (RespFilm, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Film", id)
	ret0, _ := ret[0].(RespFilm)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Film indicates an expected call of Film.
func (mr *MockSWAPIMockRecorder) Film(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Film", reflect.TypeOf((*MockSWAPI)(nil).Film), id)
}

// Planet mocks base method.
func (m *MockSWAPI) Planet(id int) (RespPlanet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Planet", id)
	ret0, _ := ret[0].(RespPlanet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Planet indicates an expected call of Planet.
func (mr *MockSWAPIMockRecorder) Planet(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Planet", reflect.TypeOf((*MockSWAPI)(nil).Planet), id)
}
